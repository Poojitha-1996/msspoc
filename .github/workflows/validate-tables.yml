name: Validate Modified Table Scripts

on:
  pull_request:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Modified Files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          json: true

      - name: Run Validation Notebook in Databricks
        id: submit-job
        env:
          DATABRICKS_HOST: "https://adb-845055060386182.2.azuredatabricks.net"
          DATABRICKS_TOKEN: "dapic77f368dd1174a60661f559bc3f41d65-2"
        run: |
          RESPONSE=$(curl -X POST "$DATABRICKS_HOST/api/2.1/jobs/runs/submit" \
              -H "Authorization: Bearer $DATABRICKS_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{
                "run_name": "Validate Table Descriptions",
                "new_cluster": {
                    "spark_version": "12.2.x-scala2.12",
                    "node_type_id": "Standard_D3_v2",
                    "num_workers": 1
                },
                "notebook_task": {
                   "notebook_path": "/Workspace/Users/saipoojitha90@gmail.com/msspoc/validate_table_descriptions",
                   "base_parameters": {
                      "modified_files": "${{ steps.changed-files.outputs.all_changed_files }}"
                    }
                }
              }')
          RUN_ID=$(echo "$RESPONSE" | jq -r '.run_id')
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: Wait for Job Completion and Display Logs
        env:
          DATABRICKS_HOST: "https://adb-845055060386182.2.azuredatabricks.net"
          DATABRICKS_TOKEN: "dapic77f368dd1174a60661f559bc3f41d65-2"
          RUN_ID: ${{ env.RUN_ID }}
        run: |
          while true; do
              RESPONSE=$(curl -s -X GET "$DATABRICKS_HOST/api/2.1/jobs/runs/get?run_id=$RUN_ID" \
                -H "Authorization: Bearer $DATABRICKS_TOKEN")
              STATUS=$(echo "$RESPONSE" | jq -r '.state.life_cycle_state')
              RESULT=$(echo "$RESPONSE" | jq -r '.state.result_state')
              echo "Job Status: $STATUS, Result: $RESULT"
              # Fetch job logs while job is running and display comments
              if [[ "$STATUS" == "RUNNING" || "$STATUS" == "PENDING" || "$STATUS" == "QUEUED" ]]; then
                  LOG_RESPONSE=$(curl -s -X GET "$DATABRICKS_HOST/api/2.1/jobs/runs/get-output?run_id=$RUN_ID" \
                      -H "Authorization: Bearer $DATABRICKS_TOKEN")
                  LOG=$(echo "$LOG_RESPONSE" | jq -r '.notebook_output.result')
                  if [[ -n "$LOG" ]]; then
                      echo "üîπ $LOG"  # Display comments or logs as they become available
                  fi
              fi
              # Keep waiting if the job is still pending or running
              if [[ "$STATUS" == "PENDING" || "$STATUS" == "RUNNING" || "$STATUS" == "QUEUED" ]]; then
                  echo "‚è≥ Job is still in progress... Waiting 10 seconds."
                  sleep 10
                  continue
              fi
              # If the job has finished, check the result
              if [[ "$STATUS" == "TERMINATED" ]]; then
                  if [[ "$RESULT" == "SUCCESS" ]]; then
                      echo "‚úÖ Job completed successfully."
                      exit 0  # Succeed the workflow if the job is successful
                  else
                      echo "‚ùå Job failed with result: $RESULT"
                      break  # Stop the loop and proceed to manual approval step if failed
                  fi
              elif [[ "$STATUS" == "SKIPPED" || "$STATUS" == "INTERNAL_ERROR" ]]; then
                  echo "‚ùå Job failed due to Databricks internal error or was skipped."
                  break  # Stop the loop and proceed to manual approval step if failed
              fi
              echo "‚ö†Ô∏è Unexpected status: $STATUS. Exiting with error."
              exit 2
          done

      - name: Request Manual Approval to Pass/Fail Workflow (Only if Job Failed)
        if: failure()  # This step is triggered only if the job failed
        uses: peter-evans/manual-approval@v1  # Using the latest stable version
        with:
          approve_message: |
            The validation job has failed. Please review the logs below and decide whether the workflow should pass or fail.
            Validation Logs:
            - ${{ steps.submit-job.outputs.validation_logs }}
            Do you approve the results? (Y/N)

      - name: Fail Workflow if User Chooses 'N'
        if: ${{ steps.approve-approval.outputs.approve_message != 'Y' }}
        run: |
          echo "‚ùå Workflow failed due to user input."
          exit 1

      - name: Pass Workflow if User Chooses 'Y'
        if: ${{ steps.approve-approval.outputs.approve_message == 'Y' }}
        run: |
          echo "‚úÖ Workflow succeeded."
          exit 0
